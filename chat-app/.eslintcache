[{"D:\\reactjs-app\\chat-app\\src\\index.js":"1","D:\\reactjs-app\\chat-app\\src\\App.js":"2","D:\\reactjs-app\\chat-app\\src\\reportWebVitals.js":"3","D:\\reactjs-app\\chat-app\\src\\router\\reactRouter.js":"4","D:\\reactjs-app\\chat-app\\src\\component\\chatApp.js":"5","D:\\reactjs-app\\chat-app\\src\\config\\firebase.js":"6","D:\\reactjs-app\\chat-app\\src\\component\\common\\index.js":"7","D:\\reactjs-app\\chat-app\\src\\component\\common\\navbar.js":"8","D:\\reactjs-app\\chat-app\\src\\store\\action\\userAction.js":"9","D:\\reactjs-app\\chat-app\\src\\store\\action\\actionType.js":"10","D:\\reactjs-app\\chat-app\\src\\store\\index.js":"11","D:\\reactjs-app\\chat-app\\src\\store\\reducer\\index.js":"12","D:\\reactjs-app\\chat-app\\src\\store\\reducer\\authReducer.js":"13","D:\\reactjs-app\\chat-app\\src\\store\\reducer\\chatReducer.js":"14","D:\\reactjs-app\\chat-app\\src\\store\\action\\chataction.js":"15"},{"size":629,"mtime":1610447916618,"results":"16","hashOfConfig":"17"},{"size":822,"mtime":1610452956976,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":615,"mtime":1610566025514,"results":"20","hashOfConfig":"17"},{"size":7439,"mtime":1610610902174,"results":"21","hashOfConfig":"17"},{"size":607,"mtime":1610442863027,"results":"22","hashOfConfig":"17"},{"size":24,"mtime":1610444169122,"results":"23","hashOfConfig":"17"},{"size":1144,"mtime":1610462808380,"results":"24","hashOfConfig":"17"},{"size":1748,"mtime":1610559376623,"results":"25","hashOfConfig":"17"},{"size":241,"mtime":1610554515704,"results":"26","hashOfConfig":"17"},{"size":201,"mtime":1610446238151,"results":"27","hashOfConfig":"17"},{"size":224,"mtime":1610446191516,"results":"28","hashOfConfig":"17"},{"size":976,"mtime":1610607414984,"results":"29","hashOfConfig":"17"},{"size":703,"mtime":1610556118790,"results":"30","hashOfConfig":"17"},{"size":946,"mtime":1610556095861,"results":"31","hashOfConfig":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},"tlrcij",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"17w2xqr","D:\\reactjs-app\\chat-app\\src\\index.js",["70"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ReactRouter } from \"./router/reactRouter\";\nimport { Provider } from 'react-redux'\nimport { Store } from './store'\n\nReactDOM.render(\n  <Provider store={Store}>\n    <ReactRouter />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["71","72"],"D:\\reactjs-app\\chat-app\\src\\App.js",[],"D:\\reactjs-app\\chat-app\\src\\reportWebVitals.js",[],"D:\\reactjs-app\\chat-app\\src\\router\\reactRouter.js",[],"D:\\reactjs-app\\chat-app\\src\\component\\chatApp.js",["73","74","75","76"],"import React from 'react'\r\nimport Firebase from '../config/firebase'\r\nimport firebase from 'firebase'\r\nimport { connect } from 'react-redux'\r\nimport { NavBar } from './common'\r\nimport { SingOut, getUserFromFirebase } from '../store/action/userAction'\r\nimport \"./chatApp.css\"\r\n\r\nclass ChatApp extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            message: \"\",\r\n            chatWithUser: null,\r\n            chats: [],\r\n            runSate : false,\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.getUserFromFirebase()\r\n    }\r\n\r\n    handeleChangeUser = () => {\r\n        this.props.SingOut(this.props)\r\n    }\r\n\r\n    sendMessage = () => {\r\n        let curr_user = this.props.Auth.currUser;\r\n        let chat_user = this.state.chatWithUser;\r\n        let merge_uid = this.uid_merge(curr_user.uid, chat_user.uid)\r\n        let time = this.getTime()\r\n\r\n        firebase.database().ref('/').child(`chats/${merge_uid}`).push({\r\n            message: this.state.message,\r\n            name: curr_user.name,\r\n            uid: curr_user.uid,\r\n            time : time,\r\n        })\r\n\r\n        this.setState({ message: \"\" })\r\n    }\r\n\r\n    uid_merge(uid1, uid2) {\r\n        if (uid1 < uid2) {\r\n            return uid1 + uid2\r\n        } else {\r\n            return uid2 + uid1\r\n        }\r\n    }\r\n\r\n    chatWithUser = (user) => {\r\n        this.setState({ chatWithUser: user })\r\n\r\n        let curr_user = this.props.Auth.currUser;\r\n        let merge_uid = this.uid_merge(curr_user.uid, user.uid)\r\n\r\n        this.getMessages(merge_uid)\r\n    }\r\n\r\n    getMessages = (merge_uid) => {\r\n        firebase.database().ref(\"/\").child(`chats/${merge_uid}`).on('child_added', (message) => {\r\n            this.state.chats.push(message.val())\r\n            this.setState({\r\n                chats: this.state.chats,\r\n            })\r\n        })\r\n    }\r\n\r\n    getTime = () => {\r\n        let time = new Date().toLocaleTimeString()\r\n        return time\r\n    }\r\n\r\n    render() {\r\n        let curr_user = this.props.Auth.currUser;\r\n        let { chatWithUser, chats } = this.state;\r\n        return (\r\n            <div>\r\n                <NavBar auth={this.props.Auth.authentication} handeleChangeUser={this.handeleChangeUser} />\r\n                <div className=\"container-fluid\">\r\n\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4 user_box\">\r\n\r\n                            <div className=\"currUser\" style={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\" }}>\r\n                                <img src={curr_user.profileUrl} alt=\"currUser profile\" style={{ borderRadius: \"98%\", marginRight: 6 }} />\r\n                                <h3>{curr_user.name}</h3>\r\n                            </div>\r\n\r\n                            <ul className=\"user-list\" >\r\n                                {\r\n                                    this.props.Auth.users.map((userObj) => {\r\n                                        return userObj.uid !== curr_user.uid &&\r\n                                            <li className=\"row mt-2\" key={userObj.uid} >\r\n                                                <div className=\"col-2 user-profile\">\r\n                                                    <img src={userObj.profileUrl} alt={`${userObj.name} profile`} style={{ borderRadius: \"98%\", marginRight: 6 }} />\r\n                                                </div>\r\n                                                <div className=\"col-10 \" style={{ display: \"flex\", justifyContent: \"center\", flexDirection: 'column', fontSize: 20, marginBottom: 5 }}>\r\n                                                    {userObj.name}\r\n                                                    <button className=\"btn btn-success\" onClick={() => this.chatWithUser(userObj)}>Chat</button>\r\n                                                </div>\r\n                                            </li>\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"col-8 chat-container\">\r\n                            <div className=\"chat-box\">\r\n                                {\r\n                                    (chatWithUser) ? (\r\n                                        <div className=\"chatUserDetail\">\r\n                                            <img src={chatWithUser.profileUrl} alt=\"user image\" style={{ borderRadius: \"100%\", width: 40, height: 40, marginRight: 6 }} />\r\n                                            <h3>{chatWithUser.name}</h3>\r\n                                        </div>\r\n                                    ) : (\r\n                                            <div onClick={() => this.setState({runSate : !this.state.runSate})}>\r\n                                                No Chat Users...\r\n                                            </div>\r\n                                        )\r\n                                }\r\n                                <div className=\"chat-area\">\r\n                                    {\r\n                                        this.state.chats.map((messageObj) => {\r\n                                            return (\r\n                                                <div key={messageObj.uid} className={`message-box ${(messageObj.uid === curr_user.uid) ? \"darker\" : \"\"}`}>\r\n                                                    <img src={`${(messageObj.uid === curr_user.uid) ? curr_user.profileUrl :  chatWithUser.profileUrl}`} className={`${(messageObj.uid === curr_user.uid) ? \"right\" : \"\"}`} />\r\n                                                    <p>{messageObj.message}</p>\r\n                                                    <span className={(messageObj.uid === curr_user.uid) ? \"time-left\" : \"time-right\"}>{messageObj.time}</span>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            {\r\n                                this.state.chatWithUser ? (\r\n                                    <div className=\"input-box\">\r\n                                        <div className=\"input-group flex-nowrap\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"enter message...\" value={this.state.message} onChange={(ev) => this.setState({ message: ev.target.value })} />\r\n                                            <button className=\"btn btn-success input-group-text\" onClick={() => this.sendMessage()} >send</button>\r\n                                        </div>\r\n                                    </div>\r\n                                ) : (\r\n                                    \"\"\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToPropes = (state) => ({\r\n    Auth: state.Auth,\r\n    users: state.Auth.users,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    SingOut: (props) => dispatch(SingOut(props)),\r\n    getUserFromFirebase: () => dispatch(getUserFromFirebase()),\r\n})\r\n\r\nexport default connect(mapStateToPropes, mapDispatchToProps)(ChatApp)","D:\\reactjs-app\\chat-app\\src\\config\\firebase.js",["77","78"],"import firebase from 'firebase'\r\nimport auth from 'firebase/auth'\r\nimport database from 'firebase/database'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBzgNqvPlOnzbSfKwZJSa97u4nZBky1U-I\",\r\n    authDomain: \"chatapp-7f1d4.firebaseapp.com\",\r\n    databaseURL: \"https://chatapp-7f1d4.firebaseio.com\",\r\n    projectId: \"chatapp-7f1d4\",\r\n    storageBucket: \"chatapp-7f1d4.appspot.com\",\r\n    messagingSenderId: \"430767782381\",\r\n    appId: \"1:430767782381:web:6ce72ec8e6a709a0228fe4\",\r\n    measurementId: \"G-9C744D1TTJ\"\r\n  };\r\nlet Firebase =  firebase.initializeApp(firebaseConfig);\r\n\r\nexport default Firebase\r\n\r\n\r\n","D:\\reactjs-app\\chat-app\\src\\component\\common\\index.js",[],"D:\\reactjs-app\\chat-app\\src\\component\\common\\navbar.js",[],"D:\\reactjs-app\\chat-app\\src\\store\\action\\userAction.js",["79"],"import ActionType from './actionType'\r\nimport Firebase from '../../config/firebase'\r\nimport firebase from 'firebase'\r\n\r\nconst SingIn = (props) => {\r\n    return dispatch => {\r\n        let history = props.history ;\r\n        var provider = new firebase.auth.FacebookAuthProvider();\r\n    \r\n        firebase.auth().signInWithPopup(provider).then((result) => {\r\n            var user = result.user;\r\n    \r\n            let currUser = {\r\n                uid : user.uid,\r\n                name : user.displayName,\r\n                email : user.email,\r\n                profileUrl : user.photoURL,\r\n            }\r\n            \r\n            dispatch({ type : ActionType.setUser , user : currUser})\r\n            firebase.database().ref(\"/\").child(`users/${user.uid}`).set(currUser)\r\n            .then( () => {\r\n                alert(\"User Successully Login\")\r\n                history.push(\"/chatApp\")\r\n            })\r\n        })\r\n        .catch((error) => {\r\n           var errorMessage = error.message;\r\n           console.log(errorMessage)\r\n        });\r\n\r\n    }\r\n}\r\n\r\nconst SingOut = (props) => {\r\n\r\n    return dispatch => {\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type : ActionType.removeUser , user : {}})\r\n            props.history.push('/')\r\n        }).catch((error) => {\r\n            console.log(\"Message=>\", error.message)\r\n        });\r\n    }\r\n\r\n}\r\n\r\nconst getUserFromFirebase = () => {\r\n    return dispatch => {\r\n        let users = []\r\n        firebase.database().ref('/').child('users').on('child_added', (data) => {\r\n            users.push(data.val())\r\n        })\r\n        dispatch({type : ActionType.setFirebaseUsers , payload : users })\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    SingIn,\r\n    SingOut,\r\n    getUserFromFirebase,\r\n}\r\n","D:\\reactjs-app\\chat-app\\src\\store\\action\\actionType.js",[],"D:\\reactjs-app\\chat-app\\src\\store\\index.js",[],"D:\\reactjs-app\\chat-app\\src\\store\\reducer\\index.js",[],"D:\\reactjs-app\\chat-app\\src\\store\\reducer\\authReducer.js",["80"],"import ActionType from '../action/actionType'\r\n\r\nconst INITIALSTATE = {\r\n    authentication : false ,\r\n    currUser : {},\r\n    users : [],\r\n}\r\n\r\nexport default (state = INITIALSTATE , action ) => {\r\n    \r\n    switch (action.type) {\r\n        case ActionType.setUser :\r\n            return(\r\n                {\r\n                    ...state,\r\n                    authentication : !state.authentication,\r\n                    currUser : action.user,\r\n                }\r\n            )\r\n        case ActionType.removeUser :\r\n            return(\r\n                {\r\n                    ...state,\r\n                    authentication : !state.authentication,\r\n                    currUser : action.user\r\n                }\r\n            )\r\n\r\n        case ActionType.setFirebaseUsers :\r\n            return(\r\n                {\r\n                    ...state,\r\n                    users : action.payload ,\r\n                }\r\n            )\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\reactjs-app\\chat-app\\src\\store\\reducer\\chatReducer.js",["81","82"],"import ActionType from '../action/actionType'\r\nconst INITIALSTATE = {\r\n    chats : []\r\n}\r\n\r\nexport default (state = INITIALSTATE , action) => {\r\n    return state\r\n\r\n    // switch (action.type) {\r\n    //     case ActionType.setMessage :\r\n    //         return (\r\n    //             {\r\n    //                 ...state,\r\n    //                 chats : [...state.chats , action.newMessage]\r\n    //             }\r\n    //         )\r\n    //     case ActionType.setFirebaseMessage:\r\n    //         return (\r\n    //             {\r\n    //                 ...state,\r\n    //                 chats : action.chats,\r\n    //             }\r\n    //         )\r\n    //     default:\r\n    //         return state\r\n    // }\r\n}","D:\\reactjs-app\\chat-app\\src\\store\\action\\chataction.js",["83"],{"ruleId":"84","severity":1,"message":"85","line":4,"column":8,"nodeType":"86","messageId":"87","endLine":4,"endColumn":11},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"84","severity":1,"message":"92","line":2,"column":8,"nodeType":"86","messageId":"87","endLine":2,"endColumn":16},{"ruleId":"84","severity":1,"message":"93","line":77,"column":29,"nodeType":"86","messageId":"87","endLine":77,"endColumn":34},{"ruleId":"94","severity":1,"message":"95","line":115,"column":45,"nodeType":"96","endLine":115,"endColumn":171},{"ruleId":"97","severity":1,"message":"98","line":129,"column":53,"nodeType":"96","endLine":129,"endColumn":223},{"ruleId":"84","severity":1,"message":"99","line":2,"column":8,"nodeType":"86","messageId":"87","endLine":2,"endColumn":12},{"ruleId":"84","severity":1,"message":"100","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":16},{"ruleId":"84","severity":1,"message":"92","line":2,"column":8,"nodeType":"86","messageId":"87","endLine":2,"endColumn":16},{"ruleId":"101","severity":1,"message":"102","line":9,"column":1,"nodeType":"103","endLine":39,"endColumn":2},{"ruleId":"84","severity":1,"message":"104","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":6,"column":1,"nodeType":"103","endLine":27,"endColumn":2},{"ruleId":"84","severity":1,"message":"92","line":2,"column":8,"nodeType":"86","messageId":"87","endLine":2,"endColumn":16},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["105"],"no-negated-in-lhs",["106"],"'Firebase' is defined but never used.","'chats' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'auth' is defined but never used.","'database' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'ActionType' is defined but never used.","no-global-assign","no-unsafe-negation"]